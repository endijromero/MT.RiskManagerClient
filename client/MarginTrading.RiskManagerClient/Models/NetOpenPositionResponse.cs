// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MarginTrading.RiskManagerClient.Models
{
    using MarginTrading.RiskManagerClient;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NetOpenPositionResponse
    {
        /// <summary>
        /// Initializes a new instance of the NetOpenPositionResponse class.
        /// </summary>
        public NetOpenPositionResponse()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NetOpenPositionResponse class.
        /// </summary>
        public NetOpenPositionResponse(double amountInAsset, double profitInAsset, string counterPartyId = default(string), string asset = default(string), double? equivalentUsdAmount = default(double?), double? equivalentUsdProfit = default(double?))
        {
            CounterPartyId = counterPartyId;
            Asset = asset;
            AmountInAsset = amountInAsset;
            ProfitInAsset = profitInAsset;
            EquivalentUsdAmount = equivalentUsdAmount;
            EquivalentUsdProfit = equivalentUsdProfit;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "counterPartyId")]
        public string CounterPartyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "asset")]
        public string Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountInAsset")]
        public double AmountInAsset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "profitInAsset")]
        public double ProfitInAsset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "equivalentUsdAmount")]
        public double? EquivalentUsdAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "equivalentUsdProfit")]
        public double? EquivalentUsdProfit { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}

// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MarginTrading.RiskManagerClient.Models
{
    using MarginTrading.RiskManagerClient;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PositionMonitor
    {
        /// <summary>
        /// Initializes a new instance of the PositionMonitor class.
        /// </summary>
        public PositionMonitor()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PositionMonitor class.
        /// </summary>
        public PositionMonitor(double? value = default(double?), string counterPartyId = default(string), string assetId = default(string), double? lowerSoftLimit = default(double?), double? lowerHardLimit = default(double?), double? upperSoftLimit = default(double?), double? upperHardLimit = default(double?), bool? isLowerSoftLimitSet = default(bool?), bool? isLowerHardLimitSet = default(bool?), bool? isUpperSoftLimitSet = default(bool?), bool? isUpperHardLimitSet = default(bool?), bool? isLowerSoftLimitBreached = default(bool?), bool? isLowerHardLimitBreached = default(bool?), bool? isUpperSoftLimitBreached = default(bool?), bool? isUpperHardLimitBreached = default(bool?))
        {
            Value = value;
            CounterPartyId = counterPartyId;
            AssetId = assetId;
            LowerSoftLimit = lowerSoftLimit;
            LowerHardLimit = lowerHardLimit;
            UpperSoftLimit = upperSoftLimit;
            UpperHardLimit = upperHardLimit;
            IsLowerSoftLimitSet = isLowerSoftLimitSet;
            IsLowerHardLimitSet = isLowerHardLimitSet;
            IsUpperSoftLimitSet = isUpperSoftLimitSet;
            IsUpperHardLimitSet = isUpperHardLimitSet;
            IsLowerSoftLimitBreached = isLowerSoftLimitBreached;
            IsLowerHardLimitBreached = isLowerHardLimitBreached;
            IsUpperSoftLimitBreached = isUpperSoftLimitBreached;
            IsUpperHardLimitBreached = isUpperHardLimitBreached;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "counterPartyId")]
        public string CounterPartyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lowerSoftLimit")]
        public double? LowerSoftLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lowerHardLimit")]
        public double? LowerHardLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upperSoftLimit")]
        public double? UpperSoftLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "upperHardLimit")]
        public double? UpperHardLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLowerSoftLimitSet")]
        public bool? IsLowerSoftLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLowerHardLimitSet")]
        public bool? IsLowerHardLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUpperSoftLimitSet")]
        public bool? IsUpperSoftLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUpperHardLimitSet")]
        public bool? IsUpperHardLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLowerSoftLimitBreached")]
        public bool? IsLowerSoftLimitBreached { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isLowerHardLimitBreached")]
        public bool? IsLowerHardLimitBreached { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUpperSoftLimitBreached")]
        public bool? IsUpperSoftLimitBreached { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isUpperHardLimitBreached")]
        public bool? IsUpperHardLimitBreached { get; private set; }

    }
}

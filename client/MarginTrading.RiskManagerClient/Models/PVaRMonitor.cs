// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MarginTrading.RiskManagerClient.Models
{
    using MarginTrading.RiskManagerClient;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PVaRMonitor
    {
        /// <summary>
        /// Initializes a new instance of the PVaRMonitor class.
        /// </summary>
        public PVaRMonitor()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PVaRMonitor class.
        /// </summary>
        public PVaRMonitor(double? value = default(double?), string counterPartyId = default(string), double? softLimit = default(double?), double? hardLimit = default(double?), bool? isSoftLimitSet = default(bool?), bool? isHardLimitSet = default(bool?), bool? isSoftLimitBreached = default(bool?), bool? isHardLimitBreached = default(bool?))
        {
            Value = value;
            CounterPartyId = counterPartyId;
            SoftLimit = softLimit;
            HardLimit = hardLimit;
            IsSoftLimitSet = isSoftLimitSet;
            IsHardLimitSet = isHardLimitSet;
            IsSoftLimitBreached = isSoftLimitBreached;
            IsHardLimitBreached = isHardLimitBreached;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "counterPartyId")]
        public string CounterPartyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "softLimit")]
        public double? SoftLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hardLimit")]
        public double? HardLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSoftLimitSet")]
        public bool? IsSoftLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isHardLimitSet")]
        public bool? IsHardLimitSet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSoftLimitBreached")]
        public bool? IsSoftLimitBreached { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isHardLimitBreached")]
        public bool? IsHardLimitBreached { get; private set; }

    }
}
